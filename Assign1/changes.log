diff --git a/Assign1/README.md b/Assign1/README.md
deleted file mode 100644
index e69de29..0000000
diff --git a/changes.log b/changes.log
index 21488b5..8a6f5d5 100644
--- a/changes.log
+++ b/changes.log
@@ -1,10 +1,122 @@
 diff --git a/Assign1/README.md b/Assign1/README.md
 deleted file mode 100644
 index e69de29..0000000
-diff --git a/README.md b/README.md
-index af7ae88..e69de29 100644
---- a/README.md
-+++ b/README.md
-@@ -1 +0,0 @@
--# CS1XA3
-\ No newline at end of file
+diff --git a/ProjectAnalyze.sh b/ProjectAnalyze.sh
+index a14c31b..41f1095 100755
+--- a/ProjectAnalyze.sh
++++ b/ProjectAnalyze.sh
+@@ -1,20 +1,23 @@
+ #!/bin/bash
+ 
+-#q1
++#feature 1, Informs you if you're local repo is up to date with the remote repo
+ 
+ s= git status
+ echo $s
+ 
+-#q2
++#feature 2, Puts all uncommited changes in a file changes.log
+ 
+ git diff > changes.log
+-echo "All unncommited changes are in changes.log"
+-#q3
++echo "All uncommited changes are in changes.log"
++
++#feature 3, Puts each line from every file of your project with the tag #TODO into a file todo.log
+ 
+ grep -h -r "#TODO" --exclude="ProjectAnalyze.sh" --exclude="todo.log" --exclude="changes.log"  > todo.log
+ echo "All lines with #TODO are in todo.log"
+ 
+-#q4
++
++#feature 4, Checks all haskell files for syntax errors and puts the results into error.log
++ 
+ shopt -s globstar
+ for i in **/*.hs; do
+     if grep -q main= $i
+@@ -27,7 +30,40 @@ done
+ 
+ >error.log
+ for i in **/*.hs; do
+-	  ghc -fno-code $i &>> error.log
++	  ghc -fno-code $i >> error.log 2>&1
++done
++echo "all haskell files with syntax errors are in error.log"
++
++#feature 5, checks all python files for syntax errors (Rubinstd)
++
++echo "" >error_python.log
++find . -name "*.py" -type f | while read line; do
++	echo "Errors for \"$line\" :" >>error_python.log
++	echo "" >>error_python.log
++	python -m py_compile "$line"&>>error_python.log
++	echo "" >>error_python.log
+ done
+-	
++			
++#feature 6, finds a file that the user wished to see and moves it to the user's current directory (deleeuwj1) 
++
++function move () {
++    read -p "Enter the name of the file you wish to find: " fileName
++    if [ $(find . -name "$fileName" -type f | wc -l) -gt 0 ] #looks through all sub-directories and moves the file to the current directory
++    then
++        fileLocation=$(find `pwd` -name $fileName) 
++        cp -v $fileLocation .  #moves the file from it's location into the current directory
++        echo "Your file in now in $PWD"
++    else
++        echo "$fileName does not exist"
++    fi 
++}
++
++#feature 7,
++
++read -p "would you like to work on a file with a #TODO line? (Y/N)" choice
++case "$choice" in 
++  y|Y )	vim "$(grep -r -h -l -m 1 "#TODO" --exclude="ProjectAnalyze.sh" --exclude="todo.log" --exclude="changes.log" )";;
++  * ) echo "";;
++esac
++
+ 
+diff --git a/changes.log b/changes.log
+index 21488b5..e69de29 100644
+--- a/changes.log
++++ b/changes.log
+@@ -1,10 +0,0 @@
+-diff --git a/Assign1/README.md b/Assign1/README.md
+-deleted file mode 100644
+-index e69de29..0000000
+-diff --git a/README.md b/README.md
+-index af7ae88..e69de29 100644
+---- a/README.md
+-+++ b/README.md
+-@@ -1 +0,0 @@
+--# CS1XA3
+-\ No newline at end of file
+diff --git a/error.log b/error.log
+index e69de29..f5834d0 100644
+--- a/error.log
++++ b/error.log
+@@ -0,0 +1,14 @@
++[1 of 1] Compiling Main             ( Assign1/test.hs, nothing )
++
++Assign1/test.hs:3:5:
++    Couldn't match expected type ‘Int’ with actual type ‘[Char]’
++    In the expression: "lol"
++    In an equation for ‘hi’: hi = "lol"
++[1 of 1] Compiling Main             ( haskell.hs, nothing )
++
++haskell.hs:1:6: Not in scope: data constructor ‘Int’
++
++haskell.hs:2:1:
++    Multiple declarations of ‘hi’
++    Declared at: haskell.hs:1:1
++                 haskell.hs:2:1
+diff --git a/todo.log b/todo.log
+index 93daffb..e9ff3f4 100644
+--- a/todo.log
++++ b/todo.log
+@@ -1,3 +1,2 @@
+-#TODO lma
+ #TODO this
+-#TODO dsaf
++#TODO that
diff --git a/error.log b/error.log
index e69de29..f5834d0 100644
--- a/error.log
+++ b/error.log
@@ -0,0 +1,14 @@
+[1 of 1] Compiling Main             ( Assign1/test.hs, nothing )
+
+Assign1/test.hs:3:5:
+    Couldn't match expected type ‘Int’ with actual type ‘[Char]’
+    In the expression: "lol"
+    In an equation for ‘hi’: hi = "lol"
+[1 of 1] Compiling Main             ( haskell.hs, nothing )
+
+haskell.hs:1:6: Not in scope: data constructor ‘Int’
+
+haskell.hs:2:1:
+    Multiple declarations of ‘hi’
+    Declared at: haskell.hs:1:1
+                 haskell.hs:2:1
diff --git a/todo.log b/todo.log
index 93daffb..e9ff3f4 100644
--- a/todo.log
+++ b/todo.log
@@ -1,3 +1,2 @@
-#TODO lma
 #TODO this
-#TODO dsaf
+#TODO that
